#!/usr/bin/env ruby

$:.unshift File.expand_path(File.dirname(__FILE__) + "/../lib")

ENV['RAILS_ENV'] = "production" unless ENV['RAILS_ENV']

require 'rubygems'
require 'bundler/setup'
require "adbot/base.rb"
options = Adbot::parse_options( ARGV )
Dir.chdir options.pwd if options.pwd
logdev = "adbot"
logdev = STDOUT if options.no_log
Log::get logdev, { :default => true, :level => Logger::DEBUG }
Log::info "initialized", "adbot"

begin
  require 'active_record'
  require 'right_aws'
  require 'yaml'

  require 'adabase/app/models/scan_fail.rb'
  require 'adabase/app/models/domain.rb'
  require 'adabase/app/models/scan.rb'
  require 'adabase/app/models/ad.rb'
  require 'adabase/app/models/screenshot.rb'
  require 'adabase/app/models/ad_image.rb'

  s3 = RightAws::S3.new(File.read('../aws/access-key').strip,
                        File.read('../aws/secret-access-key').strip,
                        { :logger => Log::get } )

  Screenshot.bucket = RightAws::S3::Bucket.new(s3, 'adchart_screenshots')

  ActiveRecord::Base.establish_connection YAML.load_file('../database.yml')[ ENV['RAILS_ENV'] ]

  Adbot::run options
rescue Exception => e
  Log::fatal "uncaught exception #{e.class}", "adbot"
  Log::fatal e.backtrace.join "\t"
  Log::fatal e.message if e.message.length > 0 
end
